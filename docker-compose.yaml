services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - docker_network

  terraform:
    image: hashicorp/terraform:light
    container_name: terraform
    volumes:
      - ./terraform:/workspace
      - ~/.aws:/root/.aws
    working_dir: /workspace
    entrypoint: /bin/sh
    tty: true
    networks:
      - docker_network

  airflow-webserver:    
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-webserver
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8080
      AIRFLOW__WEBSERVER__SECRET_KEY: 8POLSEvSfEiCemhXUycqyZOxrH6BnQsr
    ports:
      - "8080:8080"
    entrypoint: /opt/airflow/script/entrypoint.sh
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./tests:/opt/airflow/cicd/tests
      - ./script/entrypoint.sh:/opt/airflow/script/entrypoint.sh
      - ./jobs:/opt/airflow/jobs
    env_file:
      - .env
    networks:
      - docker_network

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: 8POLSEvSfEiCemhXUycqyZOxrH6BnQsr
    command: airflow scheduler
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./tests:/opt/airflow/cicd/tests
      - ./jobs:/opt/airflow/jobs
    env_file:
      - .env
    networks:
      - docker_network

  spark-master:
    image: bitnami/spark:3.5.0-debian-11-r0
    container_name: spark-master
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - "9090:8080"
      - "7077:7077"
    volumes:
    - ./jobs:/opt/bitnami/spark/jobs
    environment:
      SPARK_MODE: master
      SPARK_MASTER_PORT: 7077
      SPARK_MASTER_WEBUI_PORT: 8080
      SPARK_MASTER_HOST: spark-master
    networks:
      - docker_network


  spark-worker:
    image: bitnami/spark:3.5.0-debian-11-r0
    container_name: spark-worker
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_MASTER_URL: spark://spark-master:7077
    depends_on:
      - spark-master
    ports:
      - "8082:8082"
    volumes:
    - ./jobs:/opt/bitnami/spark/jobs
    networks:
      - docker_network


  jupyter:
    build:
      context: .
      dockerfile: jupyter/Dockerfile
    container_name: jupyter
    depends_on:
      - spark-master
    ports:
      - "8888:8888"
    volumes:
      - ./jupyter/notebooks:/home/jovyan/work/notebooks
      - ./src:/home/jovyan/work/src
    env_file:
      - .env
    networks:
      - docker_network

volumes:
  pgdata:
  
networks:
  docker_network:
    driver: bridge